// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using lucide icon components should add a class to the element 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": Object {},
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <svg
        class="lucide-icon my-icon"
        fill="none"
        height="24"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          cx="12"
          cy="12"
          r="10"
        />
        <path
          d="M8 14s1.5 2 4 2 4-2 4-2"
        />
        <line
          x1="9"
          x2="9.01"
          y1="9"
          y2="9"
        />
        <line
          x1="15"
          x2="15.01"
          y1="9"
          y2="9"
        />
      </svg>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 2,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.6",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "hasOwnProperty": [Function],
  },
  "rootVM": Object {},
  "wrapperElement": <svg
    class="lucide-icon my-icon"
    fill="none"
    height="24"
    stroke="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    stroke-width="2"
    viewBox="0 0 24 24"
    width="24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="12"
      cy="12"
      r="10"
    />
    <path
      d="M8 14s1.5 2 4 2 4-2 4-2"
    />
    <line
      x1="9"
      x2="9.01"
      y1="9"
      y2="9"
    />
    <line
      x1="15"
      x2="15.01"
      y1="9"
      y2="9"
    />
  </svg>,
}
`;

exports[`Using lucide icon components should add a style attribute to the element 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": Object {},
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <svg
        fill="none"
        height="24"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        style="position: absolute;"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          cx="12"
          cy="12"
          r="10"
        />
        <path
          d="M8 14s1.5 2 4 2 4-2 4-2"
        />
        <line
          x1="9"
          x2="9.01"
          y1="9"
          y2="9"
        />
        <line
          x1="15"
          x2="15.01"
          y1="9"
          y2="9"
        />
      </svg>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 3,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.6",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "hasOwnProperty": [Function],
  },
  "rootVM": Object {},
  "wrapperElement": <svg
    fill="none"
    height="24"
    stroke="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    stroke-width="2"
    style="position: absolute;"
    viewBox="0 0 24 24"
    width="24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="12"
      cy="12"
      r="10"
    />
    <path
      d="M8 14s1.5 2 4 2 4-2 4-2"
    />
    <line
      x1="9"
      x2="9.01"
      y1="9"
      y2="9"
    />
    <line
      x1="15"
      x2="15.01"
      y1="9"
      y2="9"
    />
  </svg>,
}
`;

exports[`Using lucide icon components should adjust the size, stroke color and stroke width 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": Object {},
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <svg
        fill="none"
        height="48"
        size="48"
        stroke="red"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        strokeWidth="4"
        viewBox="0 0 24 24"
        width="48"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          cx="12"
          cy="12"
          r="10"
        />
        <path
          d="M8 14s1.5 2 4 2 4-2 4-2"
        />
        <line
          x1="9"
          x2="9.01"
          y1="9"
          y2="9"
        />
        <line
          x1="15"
          x2="15.01"
          y1="9"
          y2="9"
        />
      </svg>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 1,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.6",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "hasOwnProperty": [Function],
  },
  "rootVM": Object {},
  "wrapperElement": <svg
    fill="none"
    height="48"
    size="48"
    stroke="red"
    stroke-linecap="round"
    stroke-linejoin="round"
    stroke-width="2"
    strokeWidth="4"
    viewBox="0 0 24 24"
    width="48"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="12"
      cy="12"
      r="10"
    />
    <path
      d="M8 14s1.5 2 4 2 4-2 4-2"
    />
    <line
      x1="9"
      x2="9.01"
      y1="9"
      y2="9"
    />
    <line
      x1="15"
      x2="15.01"
      y1="9"
      y2="9"
    />
  </svg>,
}
`;

exports[`Using lucide icon components should render an component 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "__emits": Object {},
      "__props": Array [
        Object {},
        Array [],
      ],
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <svg
        fill="none"
        height="24"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        viewBox="0 0 24 24"
        width="24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          cx="12"
          cy="12"
          r="10"
        />
        <path
          d="M8 14s1.5 2 4 2 4-2 4-2"
        />
        <line
          x1="9"
          x2="9.01"
          y1="9"
          y2="9"
        />
        <line
          x1="15"
          x2="15.01"
          y1="9"
          y2="9"
        />
      </svg>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
          "props": undefined,
          "render": [Function],
        },
        "transition-group": Object {
          "name": "transition-group",
          "props": undefined,
          "render": [Function],
        },
      },
      "config": Object {
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isCustomElement": [Function],
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "mixins": Array [
        Object {
          "__emits": null,
          "__props": Array [],
          "beforeCreate": [Function],
        },
      ],
      "provides": Object {},
      "reload": [Function],
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": Object {
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isCustomElement": [Function],
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.0.6",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "hasOwnProperty": [Function],
  },
  "rootVM": Object {},
  "wrapperElement": <svg
    fill="none"
    height="24"
    stroke="currentColor"
    stroke-linecap="round"
    stroke-linejoin="round"
    stroke-width="2"
    viewBox="0 0 24 24"
    width="24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <circle
      cx="12"
      cy="12"
      r="10"
    />
    <path
      d="M8 14s1.5 2 4 2 4-2 4-2"
    />
    <line
      x1="9"
      x2="9.01"
      y1="9"
      y2="9"
    />
    <line
      x1="15"
      x2="15.01"
      y1="9"
      y2="9"
    />
  </svg>,
}
`;
